// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import kotlin.collections.List

sealed class KeyFormat {

    abstract val value: kotlin.String

    object Pem : aws.sdk.kotlin.services.ec2.model.KeyFormat() {
        override val value: kotlin.String = "pem"
        override fun toString(): kotlin.String = value
    }

    object Ppk : aws.sdk.kotlin.services.ec2.model.KeyFormat() {
        override val value: kotlin.String = "ppk"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.KeyFormat() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.KeyFormat = when(str) {
            "pem" -> Pem
            "ppk" -> Ppk
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.KeyFormat> = listOf(
            Pem,
            Ppk
        )
    }
}
